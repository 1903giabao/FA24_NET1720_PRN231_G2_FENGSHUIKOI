// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace FENGSHUIKOI.Data.Models;

public partial class NET1720_231_2_FENGSHUIKOIContext : DbContext
{
    public NET1720_231_2_FENGSHUIKOIContext()
    {
    }

    public NET1720_231_2_FENGSHUIKOIContext(DbContextOptions<NET1720_231_2_FENGSHUIKOIContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Combo> Combos { get; set; }

    public virtual DbSet<Element> Elements { get; set; }

    public virtual DbSet<Member> Members { get; set; }

    public virtual DbSet<MemberPackage> MemberPackages { get; set; }

    public virtual DbSet<Package> Packages { get; set; }

    public virtual DbSet<ProductDetail> ProductDetails { get; set; }

    public virtual DbSet<ProductImage> ProductImages { get; set; }

    public virtual DbSet<SuitableObject> SuitableObjects { get; set; }

    public virtual DbSet<Type> Types { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection"));

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Account__3214EC2727BEE70D");

            entity.ToTable("Account");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(15);
        });

        modelBuilder.Entity<Combo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Combo__3214EC270F507D09");

            entity.ToTable("Combo");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ComboName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ComboPrice).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.Discount).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.ElementId).HasColumnName("ElementID");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.ProductDetailId).HasColumnName("ProductDetailID");
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            entity.Property(e => e.UpdatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.Element).WithMany(p => p.Combos)
                .HasForeignKey(d => d.ElementId)
                .HasConstraintName("FK__Combo__ElementID__4D94879B");

            entity.HasOne(d => d.Member).WithMany(p => p.Combos)
                .HasForeignKey(d => d.MemberId)
                .HasConstraintName("FK__Combo__MemberID__4CA06362");

            entity.HasOne(d => d.ProductDetail).WithMany(p => p.Combos)
                .HasForeignKey(d => d.ProductDetailId)
                .HasConstraintName("FK__Combo__ProductDe__4E88ABD4");
        });

        modelBuilder.Entity<Element>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Element__3214EC2762F7AC31");

            entity.ToTable("Element");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Description).HasColumnType("ntext");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            entity.Property(e => e.TabooTime).HasColumnType("datetime");
            entity.Property(e => e.UpdatedAt).HasColumnType("datetime");
        });

        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Member__3214EC2776D1BD25");

            entity.ToTable("Member");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Phone).HasMaxLength(15);
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            entity.Property(e => e.StoreName).HasMaxLength(15);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.X).HasMaxLength(15);
            entity.Property(e => e.Y).HasMaxLength(15);
        });

        modelBuilder.Entity<MemberPackage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Member_P__3214EC2790905C03");

            entity.ToTable("Member_Package");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoughtAt).HasColumnType("datetime");
            entity.Property(e => e.ExpiredDate).HasColumnType("datetime");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.PackageId).HasColumnName("PackageID");
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberPackages)
                .HasForeignKey(d => d.MemberId)
                .HasConstraintName("FK__Member_Pa__Membe__59FA5E80");

            entity.HasOne(d => d.Package).WithMany(p => p.MemberPackages)
                .HasForeignKey(d => d.PackageId)
                .HasConstraintName("FK__Member_Pa__Packa__5AEE82B9");
        });

        modelBuilder.Entity<Package>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Package__3214EC274F774E86");

            entity.ToTable("Package");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.FeatureType).HasMaxLength(255);
            entity.Property(e => e.Highlight).HasDefaultValueSql("((0))");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            entity.Property(e => e.UpdatedAt).HasColumnType("datetime");
            entity.Property(e => e.UpdatedBy).HasMaxLength(255);
        });

        modelBuilder.Entity<ProductDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ProductD__3214EC272F517DE3");

            entity.ToTable("ProductDetail");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Color)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ComboId).HasColumnName("ComboID");
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasColumnType("ntext");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Origin)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Quantity).HasDefaultValueSql("((0))");
            entity.Property(e => e.Size)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TypeId).HasColumnName("TypeID");

            entity.HasOne(d => d.TypeNavigation).WithMany(p => p.ProductDetails)
                .HasForeignKey(d => d.TypeId)
                .HasConstraintName("FK__ProductDe__TypeI__44FF419A");
        });

        modelBuilder.Entity<ProductImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ProductI__3214EC27103D3D6E");

            entity.ToTable("ProductImage");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Description).HasColumnType("ntext");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProductDetailId).HasColumnName("ProductDetailID");
            entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            entity.Property(e => e.Url)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.ProductDetail).WithMany(p => p.ProductImages)
                .HasForeignKey(d => d.ProductDetailId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductIm__Produ__48CFD27E");
        });

        modelBuilder.Entity<SuitableObject>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Suitable__3214EC2718877834");

            entity.ToTable("SuitableObject");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Color).HasMaxLength(50);
            entity.Property(e => e.Direction).HasMaxLength(50);
            entity.Property(e => e.ElementId).HasColumnName("ElementID");
            entity.Property(e => e.Position).HasMaxLength(50);
            entity.Property(e => e.Shape).HasMaxLength(50);
            entity.Property(e => e.Size).HasMaxLength(50);
            entity.Property(e => e.TypeId).HasColumnName("TypeID");
            entity.Property(e => e.Volume).HasMaxLength(50);
            entity.Property(e => e.WaterQuality).HasMaxLength(50);
            entity.Property(e => e.WaterTemperature).HasMaxLength(50);

            entity.HasOne(d => d.Element).WithMany(p => p.SuitableObjects)
                .HasForeignKey(d => d.ElementId)
                .HasConstraintName("FK__SuitableO__Eleme__5165187F");

            entity.HasOne(d => d.Type).WithMany(p => p.SuitableObjects)
                .HasForeignKey(d => d.TypeId)
                .HasConstraintName("FK__SuitableO__TypeI__52593CB8");
        });

        modelBuilder.Entity<Type>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Type__3214EC2783054BA5");

            entity.ToTable("Type");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Description).HasColumnType("ntext");
            entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}